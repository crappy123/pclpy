
#include <pybind11/pybind11.h>
#include <pybind11/numpy.h>
#include <pybind11/eigen.h>
#include <pybind11/stl.h>
#include <pcl/point_cloud.h>
#include <pcl/point_types.h>

namespace py = pybind11;
using namespace pybind11::literals;


#include <pcl/io/pcd_io.h>



void defineIoPCDReader(py::module &m) {
    using Class = pcl::PCDReader;
    py::class_<Class, pcl::FileReader, boost::shared_ptr<Class>> cls(m, "PCDReader");
    cls.def(py::init<>());
    cls.def("readHeader", py::overload_cast<const std::string &, pcl::PCLPointCloud2 &, Eigen::Vector4f &, Eigen::Quaternionf &, int &, int &, unsigned int &, const int> (&Class::readHeader), "file_name"_a, "cloud"_a, "origin"_a, "orientation"_a, "pcd_version"_a, "data_type"_a, "data_idx"_a, "offset"_a=0);
    cls.def("readHeader", py::overload_cast<const std::string &, pcl::PCLPointCloud2 &, const int> (&Class::readHeader), "file_name"_a, "cloud"_a, "offset"_a=0);
    // Non templated function disambiguation not implemented (read);
    // Non templated function disambiguation not implemented (read);
    cls.def("read", py::overload_cast<const std::string &, pcl::PointCloud<pcl::PointXYZ> &, const int> (&Class::read<pcl::PointXYZ>), "file_name"_a, "cloud"_a, "offset"_a=0);
    cls.def("read", py::overload_cast<const std::string &, pcl::PointCloud<pcl::PointXYZI> &, const int> (&Class::read<pcl::PointXYZI>), "file_name"_a, "cloud"_a, "offset"_a=0);
    cls.def("read", py::overload_cast<const std::string &, pcl::PointCloud<pcl::PointXYZL> &, const int> (&Class::read<pcl::PointXYZL>), "file_name"_a, "cloud"_a, "offset"_a=0);
    cls.def("read", py::overload_cast<const std::string &, pcl::PointCloud<pcl::Label> &, const int> (&Class::read<pcl::Label>), "file_name"_a, "cloud"_a, "offset"_a=0);
    cls.def("read", py::overload_cast<const std::string &, pcl::PointCloud<pcl::PointXYZRGBA> &, const int> (&Class::read<pcl::PointXYZRGBA>), "file_name"_a, "cloud"_a, "offset"_a=0);
    cls.def("read", py::overload_cast<const std::string &, pcl::PointCloud<pcl::PointXYZRGB> &, const int> (&Class::read<pcl::PointXYZRGB>), "file_name"_a, "cloud"_a, "offset"_a=0);
    cls.def("read", py::overload_cast<const std::string &, pcl::PointCloud<pcl::PointXYZRGBL> &, const int> (&Class::read<pcl::PointXYZRGBL>), "file_name"_a, "cloud"_a, "offset"_a=0);
    cls.def("read", py::overload_cast<const std::string &, pcl::PointCloud<pcl::PointXYZHSV> &, const int> (&Class::read<pcl::PointXYZHSV>), "file_name"_a, "cloud"_a, "offset"_a=0);
    cls.def("read", py::overload_cast<const std::string &, pcl::PointCloud<pcl::PointXY> &, const int> (&Class::read<pcl::PointXY>), "file_name"_a, "cloud"_a, "offset"_a=0);
    cls.def("read", py::overload_cast<const std::string &, pcl::PointCloud<pcl::InterestPoint> &, const int> (&Class::read<pcl::InterestPoint>), "file_name"_a, "cloud"_a, "offset"_a=0);
    cls.def("read", py::overload_cast<const std::string &, pcl::PointCloud<pcl::Axis> &, const int> (&Class::read<pcl::Axis>), "file_name"_a, "cloud"_a, "offset"_a=0);
    cls.def("read", py::overload_cast<const std::string &, pcl::PointCloud<pcl::Normal> &, const int> (&Class::read<pcl::Normal>), "file_name"_a, "cloud"_a, "offset"_a=0);
    cls.def("read", py::overload_cast<const std::string &, pcl::PointCloud<pcl::PointNormal> &, const int> (&Class::read<pcl::PointNormal>), "file_name"_a, "cloud"_a, "offset"_a=0);
    cls.def("read", py::overload_cast<const std::string &, pcl::PointCloud<pcl::PointXYZRGBNormal> &, const int> (&Class::read<pcl::PointXYZRGBNormal>), "file_name"_a, "cloud"_a, "offset"_a=0);
    cls.def("read", py::overload_cast<const std::string &, pcl::PointCloud<pcl::PointXYZINormal> &, const int> (&Class::read<pcl::PointXYZINormal>), "file_name"_a, "cloud"_a, "offset"_a=0);
    cls.def("read", py::overload_cast<const std::string &, pcl::PointCloud<pcl::PointXYZLNormal> &, const int> (&Class::read<pcl::PointXYZLNormal>), "file_name"_a, "cloud"_a, "offset"_a=0);
    cls.def("read", py::overload_cast<const std::string &, pcl::PointCloud<pcl::PointWithRange> &, const int> (&Class::read<pcl::PointWithRange>), "file_name"_a, "cloud"_a, "offset"_a=0);
    cls.def("read", py::overload_cast<const std::string &, pcl::PointCloud<pcl::PointWithViewpoint> &, const int> (&Class::read<pcl::PointWithViewpoint>), "file_name"_a, "cloud"_a, "offset"_a=0);
    cls.def("read", py::overload_cast<const std::string &, pcl::PointCloud<pcl::MomentInvariants> &, const int> (&Class::read<pcl::MomentInvariants>), "file_name"_a, "cloud"_a, "offset"_a=0);
    cls.def("read", py::overload_cast<const std::string &, pcl::PointCloud<pcl::PrincipalRadiiRSD> &, const int> (&Class::read<pcl::PrincipalRadiiRSD>), "file_name"_a, "cloud"_a, "offset"_a=0);
    cls.def("read", py::overload_cast<const std::string &, pcl::PointCloud<pcl::Boundary> &, const int> (&Class::read<pcl::Boundary>), "file_name"_a, "cloud"_a, "offset"_a=0);
    cls.def("read", py::overload_cast<const std::string &, pcl::PointCloud<pcl::PrincipalCurvatures> &, const int> (&Class::read<pcl::PrincipalCurvatures>), "file_name"_a, "cloud"_a, "offset"_a=0);
    cls.def("read", py::overload_cast<const std::string &, pcl::PointCloud<pcl::PFHSignature125> &, const int> (&Class::read<pcl::PFHSignature125>), "file_name"_a, "cloud"_a, "offset"_a=0);
    cls.def("read", py::overload_cast<const std::string &, pcl::PointCloud<pcl::PFHRGBSignature250> &, const int> (&Class::read<pcl::PFHRGBSignature250>), "file_name"_a, "cloud"_a, "offset"_a=0);
    cls.def("read", py::overload_cast<const std::string &, pcl::PointCloud<pcl::PPFSignature> &, const int> (&Class::read<pcl::PPFSignature>), "file_name"_a, "cloud"_a, "offset"_a=0);
    cls.def("read", py::overload_cast<const std::string &, pcl::PointCloud<pcl::CPPFSignature> &, const int> (&Class::read<pcl::CPPFSignature>), "file_name"_a, "cloud"_a, "offset"_a=0);
    cls.def("read", py::overload_cast<const std::string &, pcl::PointCloud<pcl::PPFRGBSignature> &, const int> (&Class::read<pcl::PPFRGBSignature>), "file_name"_a, "cloud"_a, "offset"_a=0);
    cls.def("read", py::overload_cast<const std::string &, pcl::PointCloud<pcl::NormalBasedSignature12> &, const int> (&Class::read<pcl::NormalBasedSignature12>), "file_name"_a, "cloud"_a, "offset"_a=0);
    cls.def("read", py::overload_cast<const std::string &, pcl::PointCloud<pcl::FPFHSignature33> &, const int> (&Class::read<pcl::FPFHSignature33>), "file_name"_a, "cloud"_a, "offset"_a=0);
    cls.def("read", py::overload_cast<const std::string &, pcl::PointCloud<pcl::VFHSignature308> &, const int> (&Class::read<pcl::VFHSignature308>), "file_name"_a, "cloud"_a, "offset"_a=0);
    cls.def("read", py::overload_cast<const std::string &, pcl::PointCloud<pcl::GRSDSignature21> &, const int> (&Class::read<pcl::GRSDSignature21>), "file_name"_a, "cloud"_a, "offset"_a=0);
    cls.def("read", py::overload_cast<const std::string &, pcl::PointCloud<pcl::ESFSignature640> &, const int> (&Class::read<pcl::ESFSignature640>), "file_name"_a, "cloud"_a, "offset"_a=0);
    cls.def("read", py::overload_cast<const std::string &, pcl::PointCloud<pcl::BRISKSignature512> &, const int> (&Class::read<pcl::BRISKSignature512>), "file_name"_a, "cloud"_a, "offset"_a=0);
    cls.def("read", py::overload_cast<const std::string &, pcl::PointCloud<pcl::Narf36> &, const int> (&Class::read<pcl::Narf36>), "file_name"_a, "cloud"_a, "offset"_a=0);
    cls.def("read", py::overload_cast<const std::string &, pcl::PointCloud<pcl::IntensityGradient> &, const int> (&Class::read<pcl::IntensityGradient>), "file_name"_a, "cloud"_a, "offset"_a=0);
    cls.def("read", py::overload_cast<const std::string &, pcl::PointCloud<pcl::PointWithScale> &, const int> (&Class::read<pcl::PointWithScale>), "file_name"_a, "cloud"_a, "offset"_a=0);
    cls.def("read", py::overload_cast<const std::string &, pcl::PointCloud<pcl::PointSurfel> &, const int> (&Class::read<pcl::PointSurfel>), "file_name"_a, "cloud"_a, "offset"_a=0);
    cls.def("read", py::overload_cast<const std::string &, pcl::PointCloud<pcl::ShapeContext1980> &, const int> (&Class::read<pcl::ShapeContext1980>), "file_name"_a, "cloud"_a, "offset"_a=0);
    cls.def("read", py::overload_cast<const std::string &, pcl::PointCloud<pcl::UniqueShapeContext1960> &, const int> (&Class::read<pcl::UniqueShapeContext1960>), "file_name"_a, "cloud"_a, "offset"_a=0);
    cls.def("read", py::overload_cast<const std::string &, pcl::PointCloud<pcl::SHOT352> &, const int> (&Class::read<pcl::SHOT352>), "file_name"_a, "cloud"_a, "offset"_a=0);
    cls.def("read", py::overload_cast<const std::string &, pcl::PointCloud<pcl::SHOT1344> &, const int> (&Class::read<pcl::SHOT1344>), "file_name"_a, "cloud"_a, "offset"_a=0);
    cls.def("read", py::overload_cast<const std::string &, pcl::PointCloud<pcl::PointUV> &, const int> (&Class::read<pcl::PointUV>), "file_name"_a, "cloud"_a, "offset"_a=0);
    cls.def("read", py::overload_cast<const std::string &, pcl::PointCloud<pcl::ReferenceFrame> &, const int> (&Class::read<pcl::ReferenceFrame>), "file_name"_a, "cloud"_a, "offset"_a=0);
    cls.def("read", py::overload_cast<const std::string &, pcl::PointCloud<pcl::PointDEM> &, const int> (&Class::read<pcl::PointDEM>), "file_name"_a, "cloud"_a, "offset"_a=0);
}

void defineIoPCDWriter(py::module &m) {
    using Class = pcl::PCDWriter;
    py::class_<Class, pcl::FileWriter, boost::shared_ptr<Class>> cls(m, "PCDWriter");
    cls.def(py::init<>());
    cls.def("generateHeaderBinary", &Class::generateHeaderBinary, "cloud"_a, "origin"_a, "orientation"_a);
    cls.def("generateHeaderBinaryCompressed", &Class::generateHeaderBinaryCompressed, "cloud"_a, "origin"_a, "orientation"_a);
    cls.def("generateHeaderASCII", &Class::generateHeaderASCII, "cloud"_a, "origin"_a, "orientation"_a);
    // Non templated function disambiguation not implemented (writeASCII);
    // Non templated function disambiguation not implemented (writeBinary);
    // Non templated function disambiguation not implemented (writeBinaryCompressed);
    // Non templated function disambiguation not implemented (write);
    // Non templated function disambiguation not implemented (write);
    cls.def("setMapSynchronization", &Class::setMapSynchronization, "sync"_a);
    cls.def_static("generateHeader", py::overload_cast<const pcl::PointCloud<pcl::PointXYZ> &, const int> (&Class::generateHeader<pcl::PointXYZ>), "cloud"_a, "nr_points"_a=std::numeric_limits<int>::max());
    cls.def_static("generateHeader", py::overload_cast<const pcl::PointCloud<pcl::PointXYZI> &, const int> (&Class::generateHeader<pcl::PointXYZI>), "cloud"_a, "nr_points"_a=std::numeric_limits<int>::max());
    cls.def_static("generateHeader", py::overload_cast<const pcl::PointCloud<pcl::PointXYZL> &, const int> (&Class::generateHeader<pcl::PointXYZL>), "cloud"_a, "nr_points"_a=std::numeric_limits<int>::max());
    cls.def_static("generateHeader", py::overload_cast<const pcl::PointCloud<pcl::Label> &, const int> (&Class::generateHeader<pcl::Label>), "cloud"_a, "nr_points"_a=std::numeric_limits<int>::max());
    cls.def_static("generateHeader", py::overload_cast<const pcl::PointCloud<pcl::PointXYZRGBA> &, const int> (&Class::generateHeader<pcl::PointXYZRGBA>), "cloud"_a, "nr_points"_a=std::numeric_limits<int>::max());
    cls.def_static("generateHeader", py::overload_cast<const pcl::PointCloud<pcl::PointXYZRGB> &, const int> (&Class::generateHeader<pcl::PointXYZRGB>), "cloud"_a, "nr_points"_a=std::numeric_limits<int>::max());
    cls.def_static("generateHeader", py::overload_cast<const pcl::PointCloud<pcl::PointXYZRGBL> &, const int> (&Class::generateHeader<pcl::PointXYZRGBL>), "cloud"_a, "nr_points"_a=std::numeric_limits<int>::max());
    cls.def_static("generateHeader", py::overload_cast<const pcl::PointCloud<pcl::PointXYZHSV> &, const int> (&Class::generateHeader<pcl::PointXYZHSV>), "cloud"_a, "nr_points"_a=std::numeric_limits<int>::max());
    cls.def_static("generateHeader", py::overload_cast<const pcl::PointCloud<pcl::PointXY> &, const int> (&Class::generateHeader<pcl::PointXY>), "cloud"_a, "nr_points"_a=std::numeric_limits<int>::max());
    cls.def_static("generateHeader", py::overload_cast<const pcl::PointCloud<pcl::InterestPoint> &, const int> (&Class::generateHeader<pcl::InterestPoint>), "cloud"_a, "nr_points"_a=std::numeric_limits<int>::max());
    cls.def_static("generateHeader", py::overload_cast<const pcl::PointCloud<pcl::Axis> &, const int> (&Class::generateHeader<pcl::Axis>), "cloud"_a, "nr_points"_a=std::numeric_limits<int>::max());
    cls.def_static("generateHeader", py::overload_cast<const pcl::PointCloud<pcl::Normal> &, const int> (&Class::generateHeader<pcl::Normal>), "cloud"_a, "nr_points"_a=std::numeric_limits<int>::max());
    cls.def_static("generateHeader", py::overload_cast<const pcl::PointCloud<pcl::PointNormal> &, const int> (&Class::generateHeader<pcl::PointNormal>), "cloud"_a, "nr_points"_a=std::numeric_limits<int>::max());
    cls.def_static("generateHeader", py::overload_cast<const pcl::PointCloud<pcl::PointXYZRGBNormal> &, const int> (&Class::generateHeader<pcl::PointXYZRGBNormal>), "cloud"_a, "nr_points"_a=std::numeric_limits<int>::max());
    cls.def_static("generateHeader", py::overload_cast<const pcl::PointCloud<pcl::PointXYZINormal> &, const int> (&Class::generateHeader<pcl::PointXYZINormal>), "cloud"_a, "nr_points"_a=std::numeric_limits<int>::max());
    cls.def_static("generateHeader", py::overload_cast<const pcl::PointCloud<pcl::PointXYZLNormal> &, const int> (&Class::generateHeader<pcl::PointXYZLNormal>), "cloud"_a, "nr_points"_a=std::numeric_limits<int>::max());
    cls.def_static("generateHeader", py::overload_cast<const pcl::PointCloud<pcl::PointWithRange> &, const int> (&Class::generateHeader<pcl::PointWithRange>), "cloud"_a, "nr_points"_a=std::numeric_limits<int>::max());
    cls.def_static("generateHeader", py::overload_cast<const pcl::PointCloud<pcl::PointWithViewpoint> &, const int> (&Class::generateHeader<pcl::PointWithViewpoint>), "cloud"_a, "nr_points"_a=std::numeric_limits<int>::max());
    cls.def_static("generateHeader", py::overload_cast<const pcl::PointCloud<pcl::MomentInvariants> &, const int> (&Class::generateHeader<pcl::MomentInvariants>), "cloud"_a, "nr_points"_a=std::numeric_limits<int>::max());
    cls.def_static("generateHeader", py::overload_cast<const pcl::PointCloud<pcl::PrincipalRadiiRSD> &, const int> (&Class::generateHeader<pcl::PrincipalRadiiRSD>), "cloud"_a, "nr_points"_a=std::numeric_limits<int>::max());
    cls.def_static("generateHeader", py::overload_cast<const pcl::PointCloud<pcl::Boundary> &, const int> (&Class::generateHeader<pcl::Boundary>), "cloud"_a, "nr_points"_a=std::numeric_limits<int>::max());
    cls.def_static("generateHeader", py::overload_cast<const pcl::PointCloud<pcl::PrincipalCurvatures> &, const int> (&Class::generateHeader<pcl::PrincipalCurvatures>), "cloud"_a, "nr_points"_a=std::numeric_limits<int>::max());
    cls.def_static("generateHeader", py::overload_cast<const pcl::PointCloud<pcl::PFHSignature125> &, const int> (&Class::generateHeader<pcl::PFHSignature125>), "cloud"_a, "nr_points"_a=std::numeric_limits<int>::max());
    cls.def_static("generateHeader", py::overload_cast<const pcl::PointCloud<pcl::PFHRGBSignature250> &, const int> (&Class::generateHeader<pcl::PFHRGBSignature250>), "cloud"_a, "nr_points"_a=std::numeric_limits<int>::max());
    cls.def_static("generateHeader", py::overload_cast<const pcl::PointCloud<pcl::PPFSignature> &, const int> (&Class::generateHeader<pcl::PPFSignature>), "cloud"_a, "nr_points"_a=std::numeric_limits<int>::max());
    cls.def_static("generateHeader", py::overload_cast<const pcl::PointCloud<pcl::CPPFSignature> &, const int> (&Class::generateHeader<pcl::CPPFSignature>), "cloud"_a, "nr_points"_a=std::numeric_limits<int>::max());
    cls.def_static("generateHeader", py::overload_cast<const pcl::PointCloud<pcl::PPFRGBSignature> &, const int> (&Class::generateHeader<pcl::PPFRGBSignature>), "cloud"_a, "nr_points"_a=std::numeric_limits<int>::max());
    cls.def_static("generateHeader", py::overload_cast<const pcl::PointCloud<pcl::NormalBasedSignature12> &, const int> (&Class::generateHeader<pcl::NormalBasedSignature12>), "cloud"_a, "nr_points"_a=std::numeric_limits<int>::max());
    cls.def_static("generateHeader", py::overload_cast<const pcl::PointCloud<pcl::FPFHSignature33> &, const int> (&Class::generateHeader<pcl::FPFHSignature33>), "cloud"_a, "nr_points"_a=std::numeric_limits<int>::max());
    cls.def_static("generateHeader", py::overload_cast<const pcl::PointCloud<pcl::VFHSignature308> &, const int> (&Class::generateHeader<pcl::VFHSignature308>), "cloud"_a, "nr_points"_a=std::numeric_limits<int>::max());
    cls.def_static("generateHeader", py::overload_cast<const pcl::PointCloud<pcl::GRSDSignature21> &, const int> (&Class::generateHeader<pcl::GRSDSignature21>), "cloud"_a, "nr_points"_a=std::numeric_limits<int>::max());
    cls.def_static("generateHeader", py::overload_cast<const pcl::PointCloud<pcl::ESFSignature640> &, const int> (&Class::generateHeader<pcl::ESFSignature640>), "cloud"_a, "nr_points"_a=std::numeric_limits<int>::max());
    cls.def_static("generateHeader", py::overload_cast<const pcl::PointCloud<pcl::BRISKSignature512> &, const int> (&Class::generateHeader<pcl::BRISKSignature512>), "cloud"_a, "nr_points"_a=std::numeric_limits<int>::max());
    cls.def_static("generateHeader", py::overload_cast<const pcl::PointCloud<pcl::Narf36> &, const int> (&Class::generateHeader<pcl::Narf36>), "cloud"_a, "nr_points"_a=std::numeric_limits<int>::max());
    cls.def_static("generateHeader", py::overload_cast<const pcl::PointCloud<pcl::IntensityGradient> &, const int> (&Class::generateHeader<pcl::IntensityGradient>), "cloud"_a, "nr_points"_a=std::numeric_limits<int>::max());
    cls.def_static("generateHeader", py::overload_cast<const pcl::PointCloud<pcl::PointWithScale> &, const int> (&Class::generateHeader<pcl::PointWithScale>), "cloud"_a, "nr_points"_a=std::numeric_limits<int>::max());
    cls.def_static("generateHeader", py::overload_cast<const pcl::PointCloud<pcl::PointSurfel> &, const int> (&Class::generateHeader<pcl::PointSurfel>), "cloud"_a, "nr_points"_a=std::numeric_limits<int>::max());
    cls.def_static("generateHeader", py::overload_cast<const pcl::PointCloud<pcl::ShapeContext1980> &, const int> (&Class::generateHeader<pcl::ShapeContext1980>), "cloud"_a, "nr_points"_a=std::numeric_limits<int>::max());
    cls.def_static("generateHeader", py::overload_cast<const pcl::PointCloud<pcl::UniqueShapeContext1960> &, const int> (&Class::generateHeader<pcl::UniqueShapeContext1960>), "cloud"_a, "nr_points"_a=std::numeric_limits<int>::max());
    cls.def_static("generateHeader", py::overload_cast<const pcl::PointCloud<pcl::SHOT352> &, const int> (&Class::generateHeader<pcl::SHOT352>), "cloud"_a, "nr_points"_a=std::numeric_limits<int>::max());
    cls.def_static("generateHeader", py::overload_cast<const pcl::PointCloud<pcl::SHOT1344> &, const int> (&Class::generateHeader<pcl::SHOT1344>), "cloud"_a, "nr_points"_a=std::numeric_limits<int>::max());
    cls.def_static("generateHeader", py::overload_cast<const pcl::PointCloud<pcl::PointUV> &, const int> (&Class::generateHeader<pcl::PointUV>), "cloud"_a, "nr_points"_a=std::numeric_limits<int>::max());
    cls.def_static("generateHeader", py::overload_cast<const pcl::PointCloud<pcl::ReferenceFrame> &, const int> (&Class::generateHeader<pcl::ReferenceFrame>), "cloud"_a, "nr_points"_a=std::numeric_limits<int>::max());
    cls.def_static("generateHeader", py::overload_cast<const pcl::PointCloud<pcl::PointDEM> &, const int> (&Class::generateHeader<pcl::PointDEM>), "cloud"_a, "nr_points"_a=std::numeric_limits<int>::max());
    cls.def("writeBinary", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::PointXYZ> &> (&Class::writeBinary<pcl::PointXYZ>), "file_name"_a, "cloud"_a);
    cls.def("writeBinary", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::PointXYZI> &> (&Class::writeBinary<pcl::PointXYZI>), "file_name"_a, "cloud"_a);
    cls.def("writeBinary", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::PointXYZL> &> (&Class::writeBinary<pcl::PointXYZL>), "file_name"_a, "cloud"_a);
    cls.def("writeBinary", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::Label> &> (&Class::writeBinary<pcl::Label>), "file_name"_a, "cloud"_a);
    cls.def("writeBinary", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::PointXYZRGBA> &> (&Class::writeBinary<pcl::PointXYZRGBA>), "file_name"_a, "cloud"_a);
    cls.def("writeBinary", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::PointXYZRGB> &> (&Class::writeBinary<pcl::PointXYZRGB>), "file_name"_a, "cloud"_a);
    cls.def("writeBinary", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::PointXYZRGBL> &> (&Class::writeBinary<pcl::PointXYZRGBL>), "file_name"_a, "cloud"_a);
    cls.def("writeBinary", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::PointXYZHSV> &> (&Class::writeBinary<pcl::PointXYZHSV>), "file_name"_a, "cloud"_a);
    cls.def("writeBinary", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::PointXY> &> (&Class::writeBinary<pcl::PointXY>), "file_name"_a, "cloud"_a);
    cls.def("writeBinary", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::InterestPoint> &> (&Class::writeBinary<pcl::InterestPoint>), "file_name"_a, "cloud"_a);
    cls.def("writeBinary", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::Axis> &> (&Class::writeBinary<pcl::Axis>), "file_name"_a, "cloud"_a);
    cls.def("writeBinary", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::Normal> &> (&Class::writeBinary<pcl::Normal>), "file_name"_a, "cloud"_a);
    cls.def("writeBinary", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::PointNormal> &> (&Class::writeBinary<pcl::PointNormal>), "file_name"_a, "cloud"_a);
    cls.def("writeBinary", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::PointXYZRGBNormal> &> (&Class::writeBinary<pcl::PointXYZRGBNormal>), "file_name"_a, "cloud"_a);
    cls.def("writeBinary", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::PointXYZINormal> &> (&Class::writeBinary<pcl::PointXYZINormal>), "file_name"_a, "cloud"_a);
    cls.def("writeBinary", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::PointXYZLNormal> &> (&Class::writeBinary<pcl::PointXYZLNormal>), "file_name"_a, "cloud"_a);
    cls.def("writeBinary", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::PointWithRange> &> (&Class::writeBinary<pcl::PointWithRange>), "file_name"_a, "cloud"_a);
    cls.def("writeBinary", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::PointWithViewpoint> &> (&Class::writeBinary<pcl::PointWithViewpoint>), "file_name"_a, "cloud"_a);
    cls.def("writeBinary", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::MomentInvariants> &> (&Class::writeBinary<pcl::MomentInvariants>), "file_name"_a, "cloud"_a);
    cls.def("writeBinary", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::PrincipalRadiiRSD> &> (&Class::writeBinary<pcl::PrincipalRadiiRSD>), "file_name"_a, "cloud"_a);
    cls.def("writeBinary", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::Boundary> &> (&Class::writeBinary<pcl::Boundary>), "file_name"_a, "cloud"_a);
    cls.def("writeBinary", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::PrincipalCurvatures> &> (&Class::writeBinary<pcl::PrincipalCurvatures>), "file_name"_a, "cloud"_a);
    cls.def("writeBinary", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::PFHSignature125> &> (&Class::writeBinary<pcl::PFHSignature125>), "file_name"_a, "cloud"_a);
    cls.def("writeBinary", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::PFHRGBSignature250> &> (&Class::writeBinary<pcl::PFHRGBSignature250>), "file_name"_a, "cloud"_a);
    cls.def("writeBinary", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::PPFSignature> &> (&Class::writeBinary<pcl::PPFSignature>), "file_name"_a, "cloud"_a);
    cls.def("writeBinary", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::CPPFSignature> &> (&Class::writeBinary<pcl::CPPFSignature>), "file_name"_a, "cloud"_a);
    cls.def("writeBinary", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::PPFRGBSignature> &> (&Class::writeBinary<pcl::PPFRGBSignature>), "file_name"_a, "cloud"_a);
    cls.def("writeBinary", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::NormalBasedSignature12> &> (&Class::writeBinary<pcl::NormalBasedSignature12>), "file_name"_a, "cloud"_a);
    cls.def("writeBinary", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::FPFHSignature33> &> (&Class::writeBinary<pcl::FPFHSignature33>), "file_name"_a, "cloud"_a);
    cls.def("writeBinary", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::VFHSignature308> &> (&Class::writeBinary<pcl::VFHSignature308>), "file_name"_a, "cloud"_a);
    cls.def("writeBinary", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::GRSDSignature21> &> (&Class::writeBinary<pcl::GRSDSignature21>), "file_name"_a, "cloud"_a);
    cls.def("writeBinary", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::ESFSignature640> &> (&Class::writeBinary<pcl::ESFSignature640>), "file_name"_a, "cloud"_a);
    cls.def("writeBinary", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::BRISKSignature512> &> (&Class::writeBinary<pcl::BRISKSignature512>), "file_name"_a, "cloud"_a);
    cls.def("writeBinary", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::Narf36> &> (&Class::writeBinary<pcl::Narf36>), "file_name"_a, "cloud"_a);
    cls.def("writeBinary", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::IntensityGradient> &> (&Class::writeBinary<pcl::IntensityGradient>), "file_name"_a, "cloud"_a);
    cls.def("writeBinary", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::PointWithScale> &> (&Class::writeBinary<pcl::PointWithScale>), "file_name"_a, "cloud"_a);
    cls.def("writeBinary", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::PointSurfel> &> (&Class::writeBinary<pcl::PointSurfel>), "file_name"_a, "cloud"_a);
    cls.def("writeBinary", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::ShapeContext1980> &> (&Class::writeBinary<pcl::ShapeContext1980>), "file_name"_a, "cloud"_a);
    cls.def("writeBinary", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::UniqueShapeContext1960> &> (&Class::writeBinary<pcl::UniqueShapeContext1960>), "file_name"_a, "cloud"_a);
    cls.def("writeBinary", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::SHOT352> &> (&Class::writeBinary<pcl::SHOT352>), "file_name"_a, "cloud"_a);
    cls.def("writeBinary", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::SHOT1344> &> (&Class::writeBinary<pcl::SHOT1344>), "file_name"_a, "cloud"_a);
    cls.def("writeBinary", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::PointUV> &> (&Class::writeBinary<pcl::PointUV>), "file_name"_a, "cloud"_a);
    cls.def("writeBinary", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::ReferenceFrame> &> (&Class::writeBinary<pcl::ReferenceFrame>), "file_name"_a, "cloud"_a);
    cls.def("writeBinary", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::PointDEM> &> (&Class::writeBinary<pcl::PointDEM>), "file_name"_a, "cloud"_a);
    cls.def("writeBinaryCompressed", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::PointXYZ> &> (&Class::writeBinaryCompressed<pcl::PointXYZ>), "file_name"_a, "cloud"_a);
    cls.def("writeBinaryCompressed", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::PointXYZI> &> (&Class::writeBinaryCompressed<pcl::PointXYZI>), "file_name"_a, "cloud"_a);
    cls.def("writeBinaryCompressed", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::PointXYZL> &> (&Class::writeBinaryCompressed<pcl::PointXYZL>), "file_name"_a, "cloud"_a);
    cls.def("writeBinaryCompressed", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::Label> &> (&Class::writeBinaryCompressed<pcl::Label>), "file_name"_a, "cloud"_a);
    cls.def("writeBinaryCompressed", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::PointXYZRGBA> &> (&Class::writeBinaryCompressed<pcl::PointXYZRGBA>), "file_name"_a, "cloud"_a);
    cls.def("writeBinaryCompressed", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::PointXYZRGB> &> (&Class::writeBinaryCompressed<pcl::PointXYZRGB>), "file_name"_a, "cloud"_a);
    cls.def("writeBinaryCompressed", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::PointXYZRGBL> &> (&Class::writeBinaryCompressed<pcl::PointXYZRGBL>), "file_name"_a, "cloud"_a);
    cls.def("writeBinaryCompressed", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::PointXYZHSV> &> (&Class::writeBinaryCompressed<pcl::PointXYZHSV>), "file_name"_a, "cloud"_a);
    cls.def("writeBinaryCompressed", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::PointXY> &> (&Class::writeBinaryCompressed<pcl::PointXY>), "file_name"_a, "cloud"_a);
    cls.def("writeBinaryCompressed", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::InterestPoint> &> (&Class::writeBinaryCompressed<pcl::InterestPoint>), "file_name"_a, "cloud"_a);
    cls.def("writeBinaryCompressed", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::Axis> &> (&Class::writeBinaryCompressed<pcl::Axis>), "file_name"_a, "cloud"_a);
    cls.def("writeBinaryCompressed", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::Normal> &> (&Class::writeBinaryCompressed<pcl::Normal>), "file_name"_a, "cloud"_a);
    cls.def("writeBinaryCompressed", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::PointNormal> &> (&Class::writeBinaryCompressed<pcl::PointNormal>), "file_name"_a, "cloud"_a);
    cls.def("writeBinaryCompressed", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::PointXYZRGBNormal> &> (&Class::writeBinaryCompressed<pcl::PointXYZRGBNormal>), "file_name"_a, "cloud"_a);
    cls.def("writeBinaryCompressed", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::PointXYZINormal> &> (&Class::writeBinaryCompressed<pcl::PointXYZINormal>), "file_name"_a, "cloud"_a);
    cls.def("writeBinaryCompressed", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::PointXYZLNormal> &> (&Class::writeBinaryCompressed<pcl::PointXYZLNormal>), "file_name"_a, "cloud"_a);
    cls.def("writeBinaryCompressed", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::PointWithRange> &> (&Class::writeBinaryCompressed<pcl::PointWithRange>), "file_name"_a, "cloud"_a);
    cls.def("writeBinaryCompressed", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::PointWithViewpoint> &> (&Class::writeBinaryCompressed<pcl::PointWithViewpoint>), "file_name"_a, "cloud"_a);
    cls.def("writeBinaryCompressed", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::MomentInvariants> &> (&Class::writeBinaryCompressed<pcl::MomentInvariants>), "file_name"_a, "cloud"_a);
    cls.def("writeBinaryCompressed", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::PrincipalRadiiRSD> &> (&Class::writeBinaryCompressed<pcl::PrincipalRadiiRSD>), "file_name"_a, "cloud"_a);
    cls.def("writeBinaryCompressed", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::Boundary> &> (&Class::writeBinaryCompressed<pcl::Boundary>), "file_name"_a, "cloud"_a);
    cls.def("writeBinaryCompressed", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::PrincipalCurvatures> &> (&Class::writeBinaryCompressed<pcl::PrincipalCurvatures>), "file_name"_a, "cloud"_a);
    cls.def("writeBinaryCompressed", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::PFHSignature125> &> (&Class::writeBinaryCompressed<pcl::PFHSignature125>), "file_name"_a, "cloud"_a);
    cls.def("writeBinaryCompressed", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::PFHRGBSignature250> &> (&Class::writeBinaryCompressed<pcl::PFHRGBSignature250>), "file_name"_a, "cloud"_a);
    cls.def("writeBinaryCompressed", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::PPFSignature> &> (&Class::writeBinaryCompressed<pcl::PPFSignature>), "file_name"_a, "cloud"_a);
    cls.def("writeBinaryCompressed", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::CPPFSignature> &> (&Class::writeBinaryCompressed<pcl::CPPFSignature>), "file_name"_a, "cloud"_a);
    cls.def("writeBinaryCompressed", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::PPFRGBSignature> &> (&Class::writeBinaryCompressed<pcl::PPFRGBSignature>), "file_name"_a, "cloud"_a);
    cls.def("writeBinaryCompressed", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::NormalBasedSignature12> &> (&Class::writeBinaryCompressed<pcl::NormalBasedSignature12>), "file_name"_a, "cloud"_a);
    cls.def("writeBinaryCompressed", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::FPFHSignature33> &> (&Class::writeBinaryCompressed<pcl::FPFHSignature33>), "file_name"_a, "cloud"_a);
    cls.def("writeBinaryCompressed", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::VFHSignature308> &> (&Class::writeBinaryCompressed<pcl::VFHSignature308>), "file_name"_a, "cloud"_a);
    cls.def("writeBinaryCompressed", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::GRSDSignature21> &> (&Class::writeBinaryCompressed<pcl::GRSDSignature21>), "file_name"_a, "cloud"_a);
    cls.def("writeBinaryCompressed", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::ESFSignature640> &> (&Class::writeBinaryCompressed<pcl::ESFSignature640>), "file_name"_a, "cloud"_a);
    cls.def("writeBinaryCompressed", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::BRISKSignature512> &> (&Class::writeBinaryCompressed<pcl::BRISKSignature512>), "file_name"_a, "cloud"_a);
    cls.def("writeBinaryCompressed", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::Narf36> &> (&Class::writeBinaryCompressed<pcl::Narf36>), "file_name"_a, "cloud"_a);
    cls.def("writeBinaryCompressed", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::IntensityGradient> &> (&Class::writeBinaryCompressed<pcl::IntensityGradient>), "file_name"_a, "cloud"_a);
    cls.def("writeBinaryCompressed", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::PointWithScale> &> (&Class::writeBinaryCompressed<pcl::PointWithScale>), "file_name"_a, "cloud"_a);
    cls.def("writeBinaryCompressed", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::PointSurfel> &> (&Class::writeBinaryCompressed<pcl::PointSurfel>), "file_name"_a, "cloud"_a);
    cls.def("writeBinaryCompressed", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::ShapeContext1980> &> (&Class::writeBinaryCompressed<pcl::ShapeContext1980>), "file_name"_a, "cloud"_a);
    cls.def("writeBinaryCompressed", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::UniqueShapeContext1960> &> (&Class::writeBinaryCompressed<pcl::UniqueShapeContext1960>), "file_name"_a, "cloud"_a);
    cls.def("writeBinaryCompressed", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::SHOT352> &> (&Class::writeBinaryCompressed<pcl::SHOT352>), "file_name"_a, "cloud"_a);
    cls.def("writeBinaryCompressed", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::SHOT1344> &> (&Class::writeBinaryCompressed<pcl::SHOT1344>), "file_name"_a, "cloud"_a);
    cls.def("writeBinaryCompressed", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::PointUV> &> (&Class::writeBinaryCompressed<pcl::PointUV>), "file_name"_a, "cloud"_a);
    cls.def("writeBinaryCompressed", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::ReferenceFrame> &> (&Class::writeBinaryCompressed<pcl::ReferenceFrame>), "file_name"_a, "cloud"_a);
    cls.def("writeBinaryCompressed", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::PointDEM> &> (&Class::writeBinaryCompressed<pcl::PointDEM>), "file_name"_a, "cloud"_a);
    cls.def("writeBinary", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::PointXYZ> &, const std::vector<int> &> (&Class::writeBinary<pcl::PointXYZ>), "file_name"_a, "cloud"_a, "indices"_a);
    cls.def("writeBinary", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::PointXYZI> &, const std::vector<int> &> (&Class::writeBinary<pcl::PointXYZI>), "file_name"_a, "cloud"_a, "indices"_a);
    cls.def("writeBinary", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::PointXYZL> &, const std::vector<int> &> (&Class::writeBinary<pcl::PointXYZL>), "file_name"_a, "cloud"_a, "indices"_a);
    cls.def("writeBinary", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::Label> &, const std::vector<int> &> (&Class::writeBinary<pcl::Label>), "file_name"_a, "cloud"_a, "indices"_a);
    cls.def("writeBinary", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::PointXYZRGBA> &, const std::vector<int> &> (&Class::writeBinary<pcl::PointXYZRGBA>), "file_name"_a, "cloud"_a, "indices"_a);
    cls.def("writeBinary", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::PointXYZRGB> &, const std::vector<int> &> (&Class::writeBinary<pcl::PointXYZRGB>), "file_name"_a, "cloud"_a, "indices"_a);
    cls.def("writeBinary", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::PointXYZRGBL> &, const std::vector<int> &> (&Class::writeBinary<pcl::PointXYZRGBL>), "file_name"_a, "cloud"_a, "indices"_a);
    cls.def("writeBinary", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::PointXYZHSV> &, const std::vector<int> &> (&Class::writeBinary<pcl::PointXYZHSV>), "file_name"_a, "cloud"_a, "indices"_a);
    cls.def("writeBinary", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::PointXY> &, const std::vector<int> &> (&Class::writeBinary<pcl::PointXY>), "file_name"_a, "cloud"_a, "indices"_a);
    cls.def("writeBinary", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::InterestPoint> &, const std::vector<int> &> (&Class::writeBinary<pcl::InterestPoint>), "file_name"_a, "cloud"_a, "indices"_a);
    cls.def("writeBinary", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::Axis> &, const std::vector<int> &> (&Class::writeBinary<pcl::Axis>), "file_name"_a, "cloud"_a, "indices"_a);
    cls.def("writeBinary", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::Normal> &, const std::vector<int> &> (&Class::writeBinary<pcl::Normal>), "file_name"_a, "cloud"_a, "indices"_a);
    cls.def("writeBinary", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::PointNormal> &, const std::vector<int> &> (&Class::writeBinary<pcl::PointNormal>), "file_name"_a, "cloud"_a, "indices"_a);
    cls.def("writeBinary", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::PointXYZRGBNormal> &, const std::vector<int> &> (&Class::writeBinary<pcl::PointXYZRGBNormal>), "file_name"_a, "cloud"_a, "indices"_a);
    cls.def("writeBinary", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::PointXYZINormal> &, const std::vector<int> &> (&Class::writeBinary<pcl::PointXYZINormal>), "file_name"_a, "cloud"_a, "indices"_a);
    cls.def("writeBinary", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::PointXYZLNormal> &, const std::vector<int> &> (&Class::writeBinary<pcl::PointXYZLNormal>), "file_name"_a, "cloud"_a, "indices"_a);
    cls.def("writeBinary", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::PointWithRange> &, const std::vector<int> &> (&Class::writeBinary<pcl::PointWithRange>), "file_name"_a, "cloud"_a, "indices"_a);
    cls.def("writeBinary", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::PointWithViewpoint> &, const std::vector<int> &> (&Class::writeBinary<pcl::PointWithViewpoint>), "file_name"_a, "cloud"_a, "indices"_a);
    cls.def("writeBinary", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::MomentInvariants> &, const std::vector<int> &> (&Class::writeBinary<pcl::MomentInvariants>), "file_name"_a, "cloud"_a, "indices"_a);
    cls.def("writeBinary", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::PrincipalRadiiRSD> &, const std::vector<int> &> (&Class::writeBinary<pcl::PrincipalRadiiRSD>), "file_name"_a, "cloud"_a, "indices"_a);
    cls.def("writeBinary", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::Boundary> &, const std::vector<int> &> (&Class::writeBinary<pcl::Boundary>), "file_name"_a, "cloud"_a, "indices"_a);
    cls.def("writeBinary", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::PrincipalCurvatures> &, const std::vector<int> &> (&Class::writeBinary<pcl::PrincipalCurvatures>), "file_name"_a, "cloud"_a, "indices"_a);
    cls.def("writeBinary", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::PFHSignature125> &, const std::vector<int> &> (&Class::writeBinary<pcl::PFHSignature125>), "file_name"_a, "cloud"_a, "indices"_a);
    cls.def("writeBinary", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::PFHRGBSignature250> &, const std::vector<int> &> (&Class::writeBinary<pcl::PFHRGBSignature250>), "file_name"_a, "cloud"_a, "indices"_a);
    cls.def("writeBinary", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::PPFSignature> &, const std::vector<int> &> (&Class::writeBinary<pcl::PPFSignature>), "file_name"_a, "cloud"_a, "indices"_a);
    cls.def("writeBinary", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::CPPFSignature> &, const std::vector<int> &> (&Class::writeBinary<pcl::CPPFSignature>), "file_name"_a, "cloud"_a, "indices"_a);
    cls.def("writeBinary", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::PPFRGBSignature> &, const std::vector<int> &> (&Class::writeBinary<pcl::PPFRGBSignature>), "file_name"_a, "cloud"_a, "indices"_a);
    cls.def("writeBinary", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::NormalBasedSignature12> &, const std::vector<int> &> (&Class::writeBinary<pcl::NormalBasedSignature12>), "file_name"_a, "cloud"_a, "indices"_a);
    cls.def("writeBinary", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::FPFHSignature33> &, const std::vector<int> &> (&Class::writeBinary<pcl::FPFHSignature33>), "file_name"_a, "cloud"_a, "indices"_a);
    cls.def("writeBinary", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::VFHSignature308> &, const std::vector<int> &> (&Class::writeBinary<pcl::VFHSignature308>), "file_name"_a, "cloud"_a, "indices"_a);
    cls.def("writeBinary", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::GRSDSignature21> &, const std::vector<int> &> (&Class::writeBinary<pcl::GRSDSignature21>), "file_name"_a, "cloud"_a, "indices"_a);
    cls.def("writeBinary", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::ESFSignature640> &, const std::vector<int> &> (&Class::writeBinary<pcl::ESFSignature640>), "file_name"_a, "cloud"_a, "indices"_a);
    cls.def("writeBinary", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::BRISKSignature512> &, const std::vector<int> &> (&Class::writeBinary<pcl::BRISKSignature512>), "file_name"_a, "cloud"_a, "indices"_a);
    cls.def("writeBinary", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::Narf36> &, const std::vector<int> &> (&Class::writeBinary<pcl::Narf36>), "file_name"_a, "cloud"_a, "indices"_a);
    cls.def("writeBinary", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::IntensityGradient> &, const std::vector<int> &> (&Class::writeBinary<pcl::IntensityGradient>), "file_name"_a, "cloud"_a, "indices"_a);
    cls.def("writeBinary", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::PointWithScale> &, const std::vector<int> &> (&Class::writeBinary<pcl::PointWithScale>), "file_name"_a, "cloud"_a, "indices"_a);
    cls.def("writeBinary", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::PointSurfel> &, const std::vector<int> &> (&Class::writeBinary<pcl::PointSurfel>), "file_name"_a, "cloud"_a, "indices"_a);
    cls.def("writeBinary", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::ShapeContext1980> &, const std::vector<int> &> (&Class::writeBinary<pcl::ShapeContext1980>), "file_name"_a, "cloud"_a, "indices"_a);
    cls.def("writeBinary", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::UniqueShapeContext1960> &, const std::vector<int> &> (&Class::writeBinary<pcl::UniqueShapeContext1960>), "file_name"_a, "cloud"_a, "indices"_a);
    cls.def("writeBinary", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::SHOT352> &, const std::vector<int> &> (&Class::writeBinary<pcl::SHOT352>), "file_name"_a, "cloud"_a, "indices"_a);
    cls.def("writeBinary", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::SHOT1344> &, const std::vector<int> &> (&Class::writeBinary<pcl::SHOT1344>), "file_name"_a, "cloud"_a, "indices"_a);
    cls.def("writeBinary", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::PointUV> &, const std::vector<int> &> (&Class::writeBinary<pcl::PointUV>), "file_name"_a, "cloud"_a, "indices"_a);
    cls.def("writeBinary", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::ReferenceFrame> &, const std::vector<int> &> (&Class::writeBinary<pcl::ReferenceFrame>), "file_name"_a, "cloud"_a, "indices"_a);
    cls.def("writeBinary", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::PointDEM> &, const std::vector<int> &> (&Class::writeBinary<pcl::PointDEM>), "file_name"_a, "cloud"_a, "indices"_a);
    cls.def("writeASCII", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::PointXYZ> &, const int> (&Class::writeASCII<pcl::PointXYZ>), "file_name"_a, "cloud"_a, "precision"_a=8);
    cls.def("writeASCII", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::PointXYZI> &, const int> (&Class::writeASCII<pcl::PointXYZI>), "file_name"_a, "cloud"_a, "precision"_a=8);
    cls.def("writeASCII", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::PointXYZL> &, const int> (&Class::writeASCII<pcl::PointXYZL>), "file_name"_a, "cloud"_a, "precision"_a=8);
    cls.def("writeASCII", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::Label> &, const int> (&Class::writeASCII<pcl::Label>), "file_name"_a, "cloud"_a, "precision"_a=8);
    cls.def("writeASCII", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::PointXYZRGBA> &, const int> (&Class::writeASCII<pcl::PointXYZRGBA>), "file_name"_a, "cloud"_a, "precision"_a=8);
    cls.def("writeASCII", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::PointXYZRGB> &, const int> (&Class::writeASCII<pcl::PointXYZRGB>), "file_name"_a, "cloud"_a, "precision"_a=8);
    cls.def("writeASCII", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::PointXYZRGBL> &, const int> (&Class::writeASCII<pcl::PointXYZRGBL>), "file_name"_a, "cloud"_a, "precision"_a=8);
    cls.def("writeASCII", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::PointXYZHSV> &, const int> (&Class::writeASCII<pcl::PointXYZHSV>), "file_name"_a, "cloud"_a, "precision"_a=8);
    cls.def("writeASCII", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::PointXY> &, const int> (&Class::writeASCII<pcl::PointXY>), "file_name"_a, "cloud"_a, "precision"_a=8);
    cls.def("writeASCII", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::InterestPoint> &, const int> (&Class::writeASCII<pcl::InterestPoint>), "file_name"_a, "cloud"_a, "precision"_a=8);
    cls.def("writeASCII", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::Axis> &, const int> (&Class::writeASCII<pcl::Axis>), "file_name"_a, "cloud"_a, "precision"_a=8);
    cls.def("writeASCII", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::Normal> &, const int> (&Class::writeASCII<pcl::Normal>), "file_name"_a, "cloud"_a, "precision"_a=8);
    cls.def("writeASCII", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::PointNormal> &, const int> (&Class::writeASCII<pcl::PointNormal>), "file_name"_a, "cloud"_a, "precision"_a=8);
    cls.def("writeASCII", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::PointXYZRGBNormal> &, const int> (&Class::writeASCII<pcl::PointXYZRGBNormal>), "file_name"_a, "cloud"_a, "precision"_a=8);
    cls.def("writeASCII", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::PointXYZINormal> &, const int> (&Class::writeASCII<pcl::PointXYZINormal>), "file_name"_a, "cloud"_a, "precision"_a=8);
    cls.def("writeASCII", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::PointXYZLNormal> &, const int> (&Class::writeASCII<pcl::PointXYZLNormal>), "file_name"_a, "cloud"_a, "precision"_a=8);
    cls.def("writeASCII", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::PointWithRange> &, const int> (&Class::writeASCII<pcl::PointWithRange>), "file_name"_a, "cloud"_a, "precision"_a=8);
    cls.def("writeASCII", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::PointWithViewpoint> &, const int> (&Class::writeASCII<pcl::PointWithViewpoint>), "file_name"_a, "cloud"_a, "precision"_a=8);
    cls.def("writeASCII", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::MomentInvariants> &, const int> (&Class::writeASCII<pcl::MomentInvariants>), "file_name"_a, "cloud"_a, "precision"_a=8);
    cls.def("writeASCII", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::PrincipalRadiiRSD> &, const int> (&Class::writeASCII<pcl::PrincipalRadiiRSD>), "file_name"_a, "cloud"_a, "precision"_a=8);
    cls.def("writeASCII", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::Boundary> &, const int> (&Class::writeASCII<pcl::Boundary>), "file_name"_a, "cloud"_a, "precision"_a=8);
    cls.def("writeASCII", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::PrincipalCurvatures> &, const int> (&Class::writeASCII<pcl::PrincipalCurvatures>), "file_name"_a, "cloud"_a, "precision"_a=8);
    cls.def("writeASCII", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::PFHSignature125> &, const int> (&Class::writeASCII<pcl::PFHSignature125>), "file_name"_a, "cloud"_a, "precision"_a=8);
    cls.def("writeASCII", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::PFHRGBSignature250> &, const int> (&Class::writeASCII<pcl::PFHRGBSignature250>), "file_name"_a, "cloud"_a, "precision"_a=8);
    cls.def("writeASCII", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::PPFSignature> &, const int> (&Class::writeASCII<pcl::PPFSignature>), "file_name"_a, "cloud"_a, "precision"_a=8);
    cls.def("writeASCII", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::CPPFSignature> &, const int> (&Class::writeASCII<pcl::CPPFSignature>), "file_name"_a, "cloud"_a, "precision"_a=8);
    cls.def("writeASCII", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::PPFRGBSignature> &, const int> (&Class::writeASCII<pcl::PPFRGBSignature>), "file_name"_a, "cloud"_a, "precision"_a=8);
    cls.def("writeASCII", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::NormalBasedSignature12> &, const int> (&Class::writeASCII<pcl::NormalBasedSignature12>), "file_name"_a, "cloud"_a, "precision"_a=8);
    cls.def("writeASCII", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::FPFHSignature33> &, const int> (&Class::writeASCII<pcl::FPFHSignature33>), "file_name"_a, "cloud"_a, "precision"_a=8);
    cls.def("writeASCII", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::VFHSignature308> &, const int> (&Class::writeASCII<pcl::VFHSignature308>), "file_name"_a, "cloud"_a, "precision"_a=8);
    cls.def("writeASCII", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::GRSDSignature21> &, const int> (&Class::writeASCII<pcl::GRSDSignature21>), "file_name"_a, "cloud"_a, "precision"_a=8);
    cls.def("writeASCII", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::ESFSignature640> &, const int> (&Class::writeASCII<pcl::ESFSignature640>), "file_name"_a, "cloud"_a, "precision"_a=8);
    cls.def("writeASCII", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::BRISKSignature512> &, const int> (&Class::writeASCII<pcl::BRISKSignature512>), "file_name"_a, "cloud"_a, "precision"_a=8);
    cls.def("writeASCII", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::Narf36> &, const int> (&Class::writeASCII<pcl::Narf36>), "file_name"_a, "cloud"_a, "precision"_a=8);
    cls.def("writeASCII", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::IntensityGradient> &, const int> (&Class::writeASCII<pcl::IntensityGradient>), "file_name"_a, "cloud"_a, "precision"_a=8);
    cls.def("writeASCII", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::PointWithScale> &, const int> (&Class::writeASCII<pcl::PointWithScale>), "file_name"_a, "cloud"_a, "precision"_a=8);
    cls.def("writeASCII", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::PointSurfel> &, const int> (&Class::writeASCII<pcl::PointSurfel>), "file_name"_a, "cloud"_a, "precision"_a=8);
    cls.def("writeASCII", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::ShapeContext1980> &, const int> (&Class::writeASCII<pcl::ShapeContext1980>), "file_name"_a, "cloud"_a, "precision"_a=8);
    cls.def("writeASCII", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::UniqueShapeContext1960> &, const int> (&Class::writeASCII<pcl::UniqueShapeContext1960>), "file_name"_a, "cloud"_a, "precision"_a=8);
    cls.def("writeASCII", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::SHOT352> &, const int> (&Class::writeASCII<pcl::SHOT352>), "file_name"_a, "cloud"_a, "precision"_a=8);
    cls.def("writeASCII", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::SHOT1344> &, const int> (&Class::writeASCII<pcl::SHOT1344>), "file_name"_a, "cloud"_a, "precision"_a=8);
    cls.def("writeASCII", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::PointUV> &, const int> (&Class::writeASCII<pcl::PointUV>), "file_name"_a, "cloud"_a, "precision"_a=8);
    cls.def("writeASCII", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::ReferenceFrame> &, const int> (&Class::writeASCII<pcl::ReferenceFrame>), "file_name"_a, "cloud"_a, "precision"_a=8);
    cls.def("writeASCII", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::PointDEM> &, const int> (&Class::writeASCII<pcl::PointDEM>), "file_name"_a, "cloud"_a, "precision"_a=8);
    cls.def("writeASCII", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::PointXYZ> &, const std::vector<int> &, const int> (&Class::writeASCII<pcl::PointXYZ>), "file_name"_a, "cloud"_a, "indices"_a, "precision"_a=8);
    cls.def("writeASCII", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::PointXYZI> &, const std::vector<int> &, const int> (&Class::writeASCII<pcl::PointXYZI>), "file_name"_a, "cloud"_a, "indices"_a, "precision"_a=8);
    cls.def("writeASCII", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::PointXYZL> &, const std::vector<int> &, const int> (&Class::writeASCII<pcl::PointXYZL>), "file_name"_a, "cloud"_a, "indices"_a, "precision"_a=8);
    cls.def("writeASCII", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::Label> &, const std::vector<int> &, const int> (&Class::writeASCII<pcl::Label>), "file_name"_a, "cloud"_a, "indices"_a, "precision"_a=8);
    cls.def("writeASCII", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::PointXYZRGBA> &, const std::vector<int> &, const int> (&Class::writeASCII<pcl::PointXYZRGBA>), "file_name"_a, "cloud"_a, "indices"_a, "precision"_a=8);
    cls.def("writeASCII", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::PointXYZRGB> &, const std::vector<int> &, const int> (&Class::writeASCII<pcl::PointXYZRGB>), "file_name"_a, "cloud"_a, "indices"_a, "precision"_a=8);
    cls.def("writeASCII", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::PointXYZRGBL> &, const std::vector<int> &, const int> (&Class::writeASCII<pcl::PointXYZRGBL>), "file_name"_a, "cloud"_a, "indices"_a, "precision"_a=8);
    cls.def("writeASCII", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::PointXYZHSV> &, const std::vector<int> &, const int> (&Class::writeASCII<pcl::PointXYZHSV>), "file_name"_a, "cloud"_a, "indices"_a, "precision"_a=8);
    cls.def("writeASCII", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::PointXY> &, const std::vector<int> &, const int> (&Class::writeASCII<pcl::PointXY>), "file_name"_a, "cloud"_a, "indices"_a, "precision"_a=8);
    cls.def("writeASCII", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::InterestPoint> &, const std::vector<int> &, const int> (&Class::writeASCII<pcl::InterestPoint>), "file_name"_a, "cloud"_a, "indices"_a, "precision"_a=8);
    cls.def("writeASCII", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::Axis> &, const std::vector<int> &, const int> (&Class::writeASCII<pcl::Axis>), "file_name"_a, "cloud"_a, "indices"_a, "precision"_a=8);
    cls.def("writeASCII", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::Normal> &, const std::vector<int> &, const int> (&Class::writeASCII<pcl::Normal>), "file_name"_a, "cloud"_a, "indices"_a, "precision"_a=8);
    cls.def("writeASCII", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::PointNormal> &, const std::vector<int> &, const int> (&Class::writeASCII<pcl::PointNormal>), "file_name"_a, "cloud"_a, "indices"_a, "precision"_a=8);
    cls.def("writeASCII", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::PointXYZRGBNormal> &, const std::vector<int> &, const int> (&Class::writeASCII<pcl::PointXYZRGBNormal>), "file_name"_a, "cloud"_a, "indices"_a, "precision"_a=8);
    cls.def("writeASCII", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::PointXYZINormal> &, const std::vector<int> &, const int> (&Class::writeASCII<pcl::PointXYZINormal>), "file_name"_a, "cloud"_a, "indices"_a, "precision"_a=8);
    cls.def("writeASCII", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::PointXYZLNormal> &, const std::vector<int> &, const int> (&Class::writeASCII<pcl::PointXYZLNormal>), "file_name"_a, "cloud"_a, "indices"_a, "precision"_a=8);
    cls.def("writeASCII", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::PointWithRange> &, const std::vector<int> &, const int> (&Class::writeASCII<pcl::PointWithRange>), "file_name"_a, "cloud"_a, "indices"_a, "precision"_a=8);
    cls.def("writeASCII", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::PointWithViewpoint> &, const std::vector<int> &, const int> (&Class::writeASCII<pcl::PointWithViewpoint>), "file_name"_a, "cloud"_a, "indices"_a, "precision"_a=8);
    cls.def("writeASCII", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::MomentInvariants> &, const std::vector<int> &, const int> (&Class::writeASCII<pcl::MomentInvariants>), "file_name"_a, "cloud"_a, "indices"_a, "precision"_a=8);
    cls.def("writeASCII", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::PrincipalRadiiRSD> &, const std::vector<int> &, const int> (&Class::writeASCII<pcl::PrincipalRadiiRSD>), "file_name"_a, "cloud"_a, "indices"_a, "precision"_a=8);
    cls.def("writeASCII", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::Boundary> &, const std::vector<int> &, const int> (&Class::writeASCII<pcl::Boundary>), "file_name"_a, "cloud"_a, "indices"_a, "precision"_a=8);
    cls.def("writeASCII", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::PrincipalCurvatures> &, const std::vector<int> &, const int> (&Class::writeASCII<pcl::PrincipalCurvatures>), "file_name"_a, "cloud"_a, "indices"_a, "precision"_a=8);
    cls.def("writeASCII", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::PFHSignature125> &, const std::vector<int> &, const int> (&Class::writeASCII<pcl::PFHSignature125>), "file_name"_a, "cloud"_a, "indices"_a, "precision"_a=8);
    cls.def("writeASCII", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::PFHRGBSignature250> &, const std::vector<int> &, const int> (&Class::writeASCII<pcl::PFHRGBSignature250>), "file_name"_a, "cloud"_a, "indices"_a, "precision"_a=8);
    cls.def("writeASCII", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::PPFSignature> &, const std::vector<int> &, const int> (&Class::writeASCII<pcl::PPFSignature>), "file_name"_a, "cloud"_a, "indices"_a, "precision"_a=8);
    cls.def("writeASCII", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::CPPFSignature> &, const std::vector<int> &, const int> (&Class::writeASCII<pcl::CPPFSignature>), "file_name"_a, "cloud"_a, "indices"_a, "precision"_a=8);
    cls.def("writeASCII", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::PPFRGBSignature> &, const std::vector<int> &, const int> (&Class::writeASCII<pcl::PPFRGBSignature>), "file_name"_a, "cloud"_a, "indices"_a, "precision"_a=8);
    cls.def("writeASCII", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::NormalBasedSignature12> &, const std::vector<int> &, const int> (&Class::writeASCII<pcl::NormalBasedSignature12>), "file_name"_a, "cloud"_a, "indices"_a, "precision"_a=8);
    cls.def("writeASCII", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::FPFHSignature33> &, const std::vector<int> &, const int> (&Class::writeASCII<pcl::FPFHSignature33>), "file_name"_a, "cloud"_a, "indices"_a, "precision"_a=8);
    cls.def("writeASCII", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::VFHSignature308> &, const std::vector<int> &, const int> (&Class::writeASCII<pcl::VFHSignature308>), "file_name"_a, "cloud"_a, "indices"_a, "precision"_a=8);
    cls.def("writeASCII", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::GRSDSignature21> &, const std::vector<int> &, const int> (&Class::writeASCII<pcl::GRSDSignature21>), "file_name"_a, "cloud"_a, "indices"_a, "precision"_a=8);
    cls.def("writeASCII", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::ESFSignature640> &, const std::vector<int> &, const int> (&Class::writeASCII<pcl::ESFSignature640>), "file_name"_a, "cloud"_a, "indices"_a, "precision"_a=8);
    cls.def("writeASCII", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::BRISKSignature512> &, const std::vector<int> &, const int> (&Class::writeASCII<pcl::BRISKSignature512>), "file_name"_a, "cloud"_a, "indices"_a, "precision"_a=8);
    cls.def("writeASCII", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::Narf36> &, const std::vector<int> &, const int> (&Class::writeASCII<pcl::Narf36>), "file_name"_a, "cloud"_a, "indices"_a, "precision"_a=8);
    cls.def("writeASCII", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::IntensityGradient> &, const std::vector<int> &, const int> (&Class::writeASCII<pcl::IntensityGradient>), "file_name"_a, "cloud"_a, "indices"_a, "precision"_a=8);
    cls.def("writeASCII", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::PointWithScale> &, const std::vector<int> &, const int> (&Class::writeASCII<pcl::PointWithScale>), "file_name"_a, "cloud"_a, "indices"_a, "precision"_a=8);
    cls.def("writeASCII", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::PointSurfel> &, const std::vector<int> &, const int> (&Class::writeASCII<pcl::PointSurfel>), "file_name"_a, "cloud"_a, "indices"_a, "precision"_a=8);
    cls.def("writeASCII", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::ShapeContext1980> &, const std::vector<int> &, const int> (&Class::writeASCII<pcl::ShapeContext1980>), "file_name"_a, "cloud"_a, "indices"_a, "precision"_a=8);
    cls.def("writeASCII", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::UniqueShapeContext1960> &, const std::vector<int> &, const int> (&Class::writeASCII<pcl::UniqueShapeContext1960>), "file_name"_a, "cloud"_a, "indices"_a, "precision"_a=8);
    cls.def("writeASCII", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::SHOT352> &, const std::vector<int> &, const int> (&Class::writeASCII<pcl::SHOT352>), "file_name"_a, "cloud"_a, "indices"_a, "precision"_a=8);
    cls.def("writeASCII", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::SHOT1344> &, const std::vector<int> &, const int> (&Class::writeASCII<pcl::SHOT1344>), "file_name"_a, "cloud"_a, "indices"_a, "precision"_a=8);
    cls.def("writeASCII", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::PointUV> &, const std::vector<int> &, const int> (&Class::writeASCII<pcl::PointUV>), "file_name"_a, "cloud"_a, "indices"_a, "precision"_a=8);
    cls.def("writeASCII", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::ReferenceFrame> &, const std::vector<int> &, const int> (&Class::writeASCII<pcl::ReferenceFrame>), "file_name"_a, "cloud"_a, "indices"_a, "precision"_a=8);
    cls.def("writeASCII", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::PointDEM> &, const std::vector<int> &, const int> (&Class::writeASCII<pcl::PointDEM>), "file_name"_a, "cloud"_a, "indices"_a, "precision"_a=8);
    cls.def("write", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::PointXYZ> &, const bool> (&Class::write<pcl::PointXYZ>), "file_name"_a, "cloud"_a, "binary"_a=false);
    cls.def("write", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::PointXYZI> &, const bool> (&Class::write<pcl::PointXYZI>), "file_name"_a, "cloud"_a, "binary"_a=false);
    cls.def("write", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::PointXYZL> &, const bool> (&Class::write<pcl::PointXYZL>), "file_name"_a, "cloud"_a, "binary"_a=false);
    cls.def("write", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::Label> &, const bool> (&Class::write<pcl::Label>), "file_name"_a, "cloud"_a, "binary"_a=false);
    cls.def("write", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::PointXYZRGBA> &, const bool> (&Class::write<pcl::PointXYZRGBA>), "file_name"_a, "cloud"_a, "binary"_a=false);
    cls.def("write", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::PointXYZRGB> &, const bool> (&Class::write<pcl::PointXYZRGB>), "file_name"_a, "cloud"_a, "binary"_a=false);
    cls.def("write", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::PointXYZRGBL> &, const bool> (&Class::write<pcl::PointXYZRGBL>), "file_name"_a, "cloud"_a, "binary"_a=false);
    cls.def("write", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::PointXYZHSV> &, const bool> (&Class::write<pcl::PointXYZHSV>), "file_name"_a, "cloud"_a, "binary"_a=false);
    cls.def("write", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::PointXY> &, const bool> (&Class::write<pcl::PointXY>), "file_name"_a, "cloud"_a, "binary"_a=false);
    cls.def("write", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::InterestPoint> &, const bool> (&Class::write<pcl::InterestPoint>), "file_name"_a, "cloud"_a, "binary"_a=false);
    cls.def("write", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::Axis> &, const bool> (&Class::write<pcl::Axis>), "file_name"_a, "cloud"_a, "binary"_a=false);
    cls.def("write", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::Normal> &, const bool> (&Class::write<pcl::Normal>), "file_name"_a, "cloud"_a, "binary"_a=false);
    cls.def("write", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::PointNormal> &, const bool> (&Class::write<pcl::PointNormal>), "file_name"_a, "cloud"_a, "binary"_a=false);
    cls.def("write", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::PointXYZRGBNormal> &, const bool> (&Class::write<pcl::PointXYZRGBNormal>), "file_name"_a, "cloud"_a, "binary"_a=false);
    cls.def("write", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::PointXYZINormal> &, const bool> (&Class::write<pcl::PointXYZINormal>), "file_name"_a, "cloud"_a, "binary"_a=false);
    cls.def("write", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::PointXYZLNormal> &, const bool> (&Class::write<pcl::PointXYZLNormal>), "file_name"_a, "cloud"_a, "binary"_a=false);
    cls.def("write", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::PointWithRange> &, const bool> (&Class::write<pcl::PointWithRange>), "file_name"_a, "cloud"_a, "binary"_a=false);
    cls.def("write", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::PointWithViewpoint> &, const bool> (&Class::write<pcl::PointWithViewpoint>), "file_name"_a, "cloud"_a, "binary"_a=false);
    cls.def("write", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::MomentInvariants> &, const bool> (&Class::write<pcl::MomentInvariants>), "file_name"_a, "cloud"_a, "binary"_a=false);
    cls.def("write", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::PrincipalRadiiRSD> &, const bool> (&Class::write<pcl::PrincipalRadiiRSD>), "file_name"_a, "cloud"_a, "binary"_a=false);
    cls.def("write", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::Boundary> &, const bool> (&Class::write<pcl::Boundary>), "file_name"_a, "cloud"_a, "binary"_a=false);
    cls.def("write", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::PrincipalCurvatures> &, const bool> (&Class::write<pcl::PrincipalCurvatures>), "file_name"_a, "cloud"_a, "binary"_a=false);
    cls.def("write", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::PFHSignature125> &, const bool> (&Class::write<pcl::PFHSignature125>), "file_name"_a, "cloud"_a, "binary"_a=false);
    cls.def("write", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::PFHRGBSignature250> &, const bool> (&Class::write<pcl::PFHRGBSignature250>), "file_name"_a, "cloud"_a, "binary"_a=false);
    cls.def("write", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::PPFSignature> &, const bool> (&Class::write<pcl::PPFSignature>), "file_name"_a, "cloud"_a, "binary"_a=false);
    cls.def("write", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::CPPFSignature> &, const bool> (&Class::write<pcl::CPPFSignature>), "file_name"_a, "cloud"_a, "binary"_a=false);
    cls.def("write", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::PPFRGBSignature> &, const bool> (&Class::write<pcl::PPFRGBSignature>), "file_name"_a, "cloud"_a, "binary"_a=false);
    cls.def("write", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::NormalBasedSignature12> &, const bool> (&Class::write<pcl::NormalBasedSignature12>), "file_name"_a, "cloud"_a, "binary"_a=false);
    cls.def("write", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::FPFHSignature33> &, const bool> (&Class::write<pcl::FPFHSignature33>), "file_name"_a, "cloud"_a, "binary"_a=false);
    cls.def("write", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::VFHSignature308> &, const bool> (&Class::write<pcl::VFHSignature308>), "file_name"_a, "cloud"_a, "binary"_a=false);
    cls.def("write", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::GRSDSignature21> &, const bool> (&Class::write<pcl::GRSDSignature21>), "file_name"_a, "cloud"_a, "binary"_a=false);
    cls.def("write", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::ESFSignature640> &, const bool> (&Class::write<pcl::ESFSignature640>), "file_name"_a, "cloud"_a, "binary"_a=false);
    cls.def("write", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::BRISKSignature512> &, const bool> (&Class::write<pcl::BRISKSignature512>), "file_name"_a, "cloud"_a, "binary"_a=false);
    cls.def("write", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::Narf36> &, const bool> (&Class::write<pcl::Narf36>), "file_name"_a, "cloud"_a, "binary"_a=false);
    cls.def("write", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::IntensityGradient> &, const bool> (&Class::write<pcl::IntensityGradient>), "file_name"_a, "cloud"_a, "binary"_a=false);
    cls.def("write", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::PointWithScale> &, const bool> (&Class::write<pcl::PointWithScale>), "file_name"_a, "cloud"_a, "binary"_a=false);
    cls.def("write", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::PointSurfel> &, const bool> (&Class::write<pcl::PointSurfel>), "file_name"_a, "cloud"_a, "binary"_a=false);
    cls.def("write", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::ShapeContext1980> &, const bool> (&Class::write<pcl::ShapeContext1980>), "file_name"_a, "cloud"_a, "binary"_a=false);
    cls.def("write", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::UniqueShapeContext1960> &, const bool> (&Class::write<pcl::UniqueShapeContext1960>), "file_name"_a, "cloud"_a, "binary"_a=false);
    cls.def("write", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::SHOT352> &, const bool> (&Class::write<pcl::SHOT352>), "file_name"_a, "cloud"_a, "binary"_a=false);
    cls.def("write", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::SHOT1344> &, const bool> (&Class::write<pcl::SHOT1344>), "file_name"_a, "cloud"_a, "binary"_a=false);
    cls.def("write", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::PointUV> &, const bool> (&Class::write<pcl::PointUV>), "file_name"_a, "cloud"_a, "binary"_a=false);
    cls.def("write", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::ReferenceFrame> &, const bool> (&Class::write<pcl::ReferenceFrame>), "file_name"_a, "cloud"_a, "binary"_a=false);
    cls.def("write", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::PointDEM> &, const bool> (&Class::write<pcl::PointDEM>), "file_name"_a, "cloud"_a, "binary"_a=false);
    cls.def("write", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::PointXYZ> &, const std::vector<int> &, bool> (&Class::write<pcl::PointXYZ>), "file_name"_a, "cloud"_a, "indices"_a, "binary"_a=false);
    cls.def("write", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::PointXYZI> &, const std::vector<int> &, bool> (&Class::write<pcl::PointXYZI>), "file_name"_a, "cloud"_a, "indices"_a, "binary"_a=false);
    cls.def("write", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::PointXYZL> &, const std::vector<int> &, bool> (&Class::write<pcl::PointXYZL>), "file_name"_a, "cloud"_a, "indices"_a, "binary"_a=false);
    cls.def("write", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::Label> &, const std::vector<int> &, bool> (&Class::write<pcl::Label>), "file_name"_a, "cloud"_a, "indices"_a, "binary"_a=false);
    cls.def("write", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::PointXYZRGBA> &, const std::vector<int> &, bool> (&Class::write<pcl::PointXYZRGBA>), "file_name"_a, "cloud"_a, "indices"_a, "binary"_a=false);
    cls.def("write", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::PointXYZRGB> &, const std::vector<int> &, bool> (&Class::write<pcl::PointXYZRGB>), "file_name"_a, "cloud"_a, "indices"_a, "binary"_a=false);
    cls.def("write", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::PointXYZRGBL> &, const std::vector<int> &, bool> (&Class::write<pcl::PointXYZRGBL>), "file_name"_a, "cloud"_a, "indices"_a, "binary"_a=false);
    cls.def("write", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::PointXYZHSV> &, const std::vector<int> &, bool> (&Class::write<pcl::PointXYZHSV>), "file_name"_a, "cloud"_a, "indices"_a, "binary"_a=false);
    cls.def("write", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::PointXY> &, const std::vector<int> &, bool> (&Class::write<pcl::PointXY>), "file_name"_a, "cloud"_a, "indices"_a, "binary"_a=false);
    cls.def("write", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::InterestPoint> &, const std::vector<int> &, bool> (&Class::write<pcl::InterestPoint>), "file_name"_a, "cloud"_a, "indices"_a, "binary"_a=false);
    cls.def("write", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::Axis> &, const std::vector<int> &, bool> (&Class::write<pcl::Axis>), "file_name"_a, "cloud"_a, "indices"_a, "binary"_a=false);
    cls.def("write", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::Normal> &, const std::vector<int> &, bool> (&Class::write<pcl::Normal>), "file_name"_a, "cloud"_a, "indices"_a, "binary"_a=false);
    cls.def("write", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::PointNormal> &, const std::vector<int> &, bool> (&Class::write<pcl::PointNormal>), "file_name"_a, "cloud"_a, "indices"_a, "binary"_a=false);
    cls.def("write", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::PointXYZRGBNormal> &, const std::vector<int> &, bool> (&Class::write<pcl::PointXYZRGBNormal>), "file_name"_a, "cloud"_a, "indices"_a, "binary"_a=false);
    cls.def("write", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::PointXYZINormal> &, const std::vector<int> &, bool> (&Class::write<pcl::PointXYZINormal>), "file_name"_a, "cloud"_a, "indices"_a, "binary"_a=false);
    cls.def("write", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::PointXYZLNormal> &, const std::vector<int> &, bool> (&Class::write<pcl::PointXYZLNormal>), "file_name"_a, "cloud"_a, "indices"_a, "binary"_a=false);
    cls.def("write", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::PointWithRange> &, const std::vector<int> &, bool> (&Class::write<pcl::PointWithRange>), "file_name"_a, "cloud"_a, "indices"_a, "binary"_a=false);
    cls.def("write", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::PointWithViewpoint> &, const std::vector<int> &, bool> (&Class::write<pcl::PointWithViewpoint>), "file_name"_a, "cloud"_a, "indices"_a, "binary"_a=false);
    cls.def("write", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::MomentInvariants> &, const std::vector<int> &, bool> (&Class::write<pcl::MomentInvariants>), "file_name"_a, "cloud"_a, "indices"_a, "binary"_a=false);
    cls.def("write", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::PrincipalRadiiRSD> &, const std::vector<int> &, bool> (&Class::write<pcl::PrincipalRadiiRSD>), "file_name"_a, "cloud"_a, "indices"_a, "binary"_a=false);
    cls.def("write", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::Boundary> &, const std::vector<int> &, bool> (&Class::write<pcl::Boundary>), "file_name"_a, "cloud"_a, "indices"_a, "binary"_a=false);
    cls.def("write", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::PrincipalCurvatures> &, const std::vector<int> &, bool> (&Class::write<pcl::PrincipalCurvatures>), "file_name"_a, "cloud"_a, "indices"_a, "binary"_a=false);
    cls.def("write", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::PFHSignature125> &, const std::vector<int> &, bool> (&Class::write<pcl::PFHSignature125>), "file_name"_a, "cloud"_a, "indices"_a, "binary"_a=false);
    cls.def("write", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::PFHRGBSignature250> &, const std::vector<int> &, bool> (&Class::write<pcl::PFHRGBSignature250>), "file_name"_a, "cloud"_a, "indices"_a, "binary"_a=false);
    cls.def("write", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::PPFSignature> &, const std::vector<int> &, bool> (&Class::write<pcl::PPFSignature>), "file_name"_a, "cloud"_a, "indices"_a, "binary"_a=false);
    cls.def("write", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::CPPFSignature> &, const std::vector<int> &, bool> (&Class::write<pcl::CPPFSignature>), "file_name"_a, "cloud"_a, "indices"_a, "binary"_a=false);
    cls.def("write", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::PPFRGBSignature> &, const std::vector<int> &, bool> (&Class::write<pcl::PPFRGBSignature>), "file_name"_a, "cloud"_a, "indices"_a, "binary"_a=false);
    cls.def("write", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::NormalBasedSignature12> &, const std::vector<int> &, bool> (&Class::write<pcl::NormalBasedSignature12>), "file_name"_a, "cloud"_a, "indices"_a, "binary"_a=false);
    cls.def("write", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::FPFHSignature33> &, const std::vector<int> &, bool> (&Class::write<pcl::FPFHSignature33>), "file_name"_a, "cloud"_a, "indices"_a, "binary"_a=false);
    cls.def("write", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::VFHSignature308> &, const std::vector<int> &, bool> (&Class::write<pcl::VFHSignature308>), "file_name"_a, "cloud"_a, "indices"_a, "binary"_a=false);
    cls.def("write", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::GRSDSignature21> &, const std::vector<int> &, bool> (&Class::write<pcl::GRSDSignature21>), "file_name"_a, "cloud"_a, "indices"_a, "binary"_a=false);
    cls.def("write", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::ESFSignature640> &, const std::vector<int> &, bool> (&Class::write<pcl::ESFSignature640>), "file_name"_a, "cloud"_a, "indices"_a, "binary"_a=false);
    cls.def("write", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::BRISKSignature512> &, const std::vector<int> &, bool> (&Class::write<pcl::BRISKSignature512>), "file_name"_a, "cloud"_a, "indices"_a, "binary"_a=false);
    cls.def("write", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::Narf36> &, const std::vector<int> &, bool> (&Class::write<pcl::Narf36>), "file_name"_a, "cloud"_a, "indices"_a, "binary"_a=false);
    cls.def("write", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::IntensityGradient> &, const std::vector<int> &, bool> (&Class::write<pcl::IntensityGradient>), "file_name"_a, "cloud"_a, "indices"_a, "binary"_a=false);
    cls.def("write", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::PointWithScale> &, const std::vector<int> &, bool> (&Class::write<pcl::PointWithScale>), "file_name"_a, "cloud"_a, "indices"_a, "binary"_a=false);
    cls.def("write", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::PointSurfel> &, const std::vector<int> &, bool> (&Class::write<pcl::PointSurfel>), "file_name"_a, "cloud"_a, "indices"_a, "binary"_a=false);
    cls.def("write", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::ShapeContext1980> &, const std::vector<int> &, bool> (&Class::write<pcl::ShapeContext1980>), "file_name"_a, "cloud"_a, "indices"_a, "binary"_a=false);
    cls.def("write", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::UniqueShapeContext1960> &, const std::vector<int> &, bool> (&Class::write<pcl::UniqueShapeContext1960>), "file_name"_a, "cloud"_a, "indices"_a, "binary"_a=false);
    cls.def("write", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::SHOT352> &, const std::vector<int> &, bool> (&Class::write<pcl::SHOT352>), "file_name"_a, "cloud"_a, "indices"_a, "binary"_a=false);
    cls.def("write", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::SHOT1344> &, const std::vector<int> &, bool> (&Class::write<pcl::SHOT1344>), "file_name"_a, "cloud"_a, "indices"_a, "binary"_a=false);
    cls.def("write", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::PointUV> &, const std::vector<int> &, bool> (&Class::write<pcl::PointUV>), "file_name"_a, "cloud"_a, "indices"_a, "binary"_a=false);
    cls.def("write", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::ReferenceFrame> &, const std::vector<int> &, bool> (&Class::write<pcl::ReferenceFrame>), "file_name"_a, "cloud"_a, "indices"_a, "binary"_a=false);
    cls.def("write", py::overload_cast<const std::string &, const pcl::PointCloud<pcl::PointDEM> &, const std::vector<int> &, bool> (&Class::write<pcl::PointDEM>), "file_name"_a, "cloud"_a, "indices"_a, "binary"_a=false);
}

void defineIoPcdIoFunctions(py::module &m) {
}

void defineIoPcdIoClasses(py::module &sub_module) {
    defineIoPCDReader(sub_module);
    defineIoPCDWriter(sub_module);
}